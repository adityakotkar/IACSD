date assignment 
Q1. date_sub(date_add(last_day(curdate()),interval 1 day),interval 4 month)
Q15. select year(hiredate),count(*)
    -> from emp
    -> group by year(hiredate)
    -> having count(*)>10;

Database Assignment 3
e.
select company,pname,avg(amount) over (partition by pname)
    -> from product;


select
from
where
group by
having
order by

partion by 


-----DDL 
create, alter, drop, truncate

----DML
insert, update, delete

----TCL
commit, rollback, savepoint

DCL--- grant,revoke

one student can opt for many courses
one course can be assigned to many student

student-course -----> M-M
one faculty can be assigned to only one course
one course will have only one faculty
facuty-course ------> 1-1

Student(sid,sname,adress,mobile)
Constraints student table
sid --- primary key 
sname   ------- not null
mobile -------int(10) unique  1000000000 <=mobileno <=9999999999
              varchar(15)     length(mobile)>=10

faculty(fid,fname,sp.sub,date_of_join)
fid---primary key
fname---- not null
sp.sub ---- default java

course(cid,cname,fid)
cid ------primary key
cname---- unique not null
fid ----foreign key references(faculty)




student-course(sid,cid,fees,start-dt,end-dt)
sid+cid ---- primary key
fees------ check fees>1000

sid---foreign key references student(sid)
cid---foreign key reference course(cid)

-----Queries for writing tables
Student(sid,sname,adress,mobile)
Constraints student table
sid --- primary key 
sname   ------- not null
mobile -------varchar(15) unique +91-123455

create table student1(
sid int primary key,
sname varchar(30) not null,
adress varchar(30),
mobile int(10) unique
)

 insert into student1 values(1,'Rajas','Deccan',111111);

 insert into student1(sname,sid,mobile,adress) values('Rakesh',2,111112,'Deccan');



 insert into student1 values(3,'Rajas','Deccan',111113);


insert into student1 values(4,'Ashutosh','Kothrud',111114);
insert into student1 values(5,'Ashwini','Kothrud',1111141111);
insert into student1(sid,sname) values(7,'Swati')


------create faulty table
faculty(fid,fname,sp.sub)
fid---primary key
fname---- not null
sp.sub ---- default java

create table faculty(
fid int primary key,
fname varchar(30) not null,
sp_sub varchar(30) default 'java'
);
------create course table
course(cid,cname,faid,start_date)
cid ------primary key
cname---- unique not null
fid ----foreign key references(faculty)

create table course(
cid int,
cname varchar(30) unique not null,
start_date date,
faid int,
primary key(cid),
foreign key fk_fid(faid) references faculty(fid)
on delete set null
on update cascade

)
----create student_course table
student-course(sid,cid,fees,start-dt,end-dt)
sid+cid ---- primary key
fees------ check fees>1000

sid---foreign key references student(sid)
cid---foreign key reference course(cid)

create table student_course(
sid int,
cid int,
fees decimal(12,2) check (fees>1000),
start_date date,
end_date date,
primary key(sid,cid),
foreign key fk_sid(sid) references student1(sid) 
on update cascade
on delete cascade,
foreign key fk_cid(cid) references course(cid) 
on update cascade
on delete cascade
)





------to delete table data and structureof table
drop table student1

---to delete all records but it will not delete the table structure
delete 
from student1;

or

Truncate table student1

---what is difference between Truncate and delete
Truncate                         delete
1.DDL statement                    DML statement

2.Since DDL statements are         Since DML statements are not autocommit
autotcommit, roll back is          hence rollback is possible
not possible

3. we cannot use where clause      we can use where clause, hence we
in truncate statement              can delete few rows based on condition
so always delete all records

By default mysql is autocommit
to set autocommit off
set autocommit=0

---delete record based on condition

 delete
  from student1
  where sid=3;


set autocommit=0    --- this will off the autocommit fascility
create table  ------ ddl statement (create,alter table,drop,truncate) 
DML (insert,delete,update)
TCL (commit,rollback,savepoint)
insert 10
insert 20
insert 30
commit;    ----- this will make the changes permanent
insert 40
insert 50
delete 20
commit;
insert 60
update 50
delete 40
roollback; --- rollback will happen till previous commit;


create table abc
insert 20
insert 30
alter table table1   --- this will automatically commit the changes
insert 40
insert 60
savepoint A
insert 70
insert 80
savepoint B 
update 20
delete 10
rollback to B
commit;











